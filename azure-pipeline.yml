trigger:
  branches:
    include:
    - main
    - stage

resources:
  repositories:
  - repository: self
  - repository: AzureTemplates            # ID used to reference pipeline templates below
    type: git
    name: azure-templates

variables:
  # Container registry service connection established during pipeline creation
  imageRepository: 'project'
  containerRegistry: 'LCAcollect ACR'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    tag: '$(Build.BuildId)'
  ${{ else }}:
    tag: '$(Build.BuildId)-dev'


  # Helm registry
  azureSubscriptionForACR: 'LCAcollect Shared Container Reg'
  containerRegistryName: lcacollect.azurecr.io

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  workingDirectory: $(System.DefaultWorkingDirectory)

  # Variables
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isPR: $[eq(variables['Build.Reason'], 'PullRequest')]

stages:
- stage: Test
  displayName: Run tests
  jobs:
    - template: pipelines/python-test.yaml@AzureTemplates
      parameters:
        vmImageName: $(vmImageName)
        workingDirectory: $(workingDirectory)

- stage: Artifact
  displayName: Publish GraphQL Schema
  condition: and(succeeded(), eq(variables.isPR, 'false'))
  dependsOn: Test
  jobs:
    - job: PublishSchema
      displayName: Publish GraphQL Schema
      steps:
      - publish: $(workingDirectory)/graphql/schema.graphql
        artifact: project.graphql

- stage: Deploy
  displayName: Build and Deploy
  condition: and(succeeded(), eq(variables.isPR, 'false'))
  dependsOn: 
    - Test
    - Artifact
  jobs:
    - template: pipelines/docker-build.yaml@AzureTemplates
      parameters:
        vmImageName: $(vmImageName)
        dockerfilePath: $(dockerfilePath)
        imageRepository: $(imageRepository)
        containerRegistry: $(containerRegistry)
        tag: $(tag)
    - template: pipelines/helm-deploy.yaml@AzureTemplates
      parameters:
        vmImageName: $(vmImageName)
        azureSubscription: $(azureSubscriptionForACR)
        containerRegistry: $(containerRegistryName)
        chartName: $(imageRepository)
        tag: $(tag)
        workingDirectory: $(workingDirectory)/helm