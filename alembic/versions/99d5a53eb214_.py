"""empty message

Revision ID: 99d5a53eb214
Revises: 
Create Date: 2022-07-15 10:32:18.988103

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "99d5a53eb214"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "member",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("company", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_login", sa.Date(), nullable=True),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_member_email"), "member", ["email"], unique=False)
    op.create_table(
        "project",
        sa.Column("meta_fields", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("project_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("client", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("domain", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_project_project_id"), "project", ["project_id"], unique=False)
    op.create_table(
        "projectcontributor",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id", "project_id"),
    )
    op.create_index(op.f("ix_projectcontributor_id"), "projectcontributor", ["id"], unique=False)
    op.create_index(op.f("ix_projectcontributor_name"), "projectcontributor", ["name"], unique=False)
    op.create_table(
        "projectgroup",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("representative_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id", "project_id"),
    )
    op.create_index(op.f("ix_projectgroup_id"), "projectgroup", ["id"], unique=False)
    op.create_index(op.f("ix_projectgroup_name"), "projectgroup", ["name"], unique=False)
    op.create_table(
        "projectmember",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("company", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_login", sa.Date(), nullable=True),
        sa.Column("role", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("project_group", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("origin_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("project_foreign_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["origin_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_foreign_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projectmember_email"), "projectmember", ["email"], unique=False)
    op.create_table(
        "projectstage",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("stage", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("lifecycle_phase", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("project_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id", "project_id"),
    )
    op.create_index(op.f("ix_projectstage_id"), "projectstage", ["id"], unique=False)
    op.create_index(op.f("ix_projectstage_name"), "projectstage", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_projectstage_name"), table_name="projectstage")
    op.drop_index(op.f("ix_projectstage_id"), table_name="projectstage")
    op.drop_table("projectstage")
    op.drop_index(op.f("ix_projectmember_email"), table_name="projectmember")
    op.drop_table("projectmember")
    op.drop_index(op.f("ix_projectgroup_name"), table_name="projectgroup")
    op.drop_index(op.f("ix_projectgroup_id"), table_name="projectgroup")
    op.drop_table("projectgroup")
    op.drop_index(op.f("ix_projectcontributor_name"), table_name="projectcontributor")
    op.drop_index(op.f("ix_projectcontributor_id"), table_name="projectcontributor")
    op.drop_table("projectcontributor")
    op.drop_index(op.f("ix_project_project_id"), table_name="project")
    op.drop_table("project")
    op.drop_index(op.f("ix_member_email"), table_name="member")
    op.drop_table("member")
    # ### end Alembic commands ###
